% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deprec-condition.R
\name{is_informative_error}
\alias{is_informative_error}
\title{Is an error informative?}
\usage{
is_informative_error(x, ...)
}
\arguments{
\item{x}{An error object.}

\item{...}{These dots are for future extensions and must be empty.}
}
\description{
\ifelse{html}{\figure{lifecycle-deprecated.svg}{options: alt='Deprecated lifecycle'}}{\strong{Deprecated}}

\code{is_informative_error()} is a generic predicate that indicates
whether testthat users should explicitly test for an error
class. Since we no longer recommend you do that, this generic
has been deprecated.
}
\details{
A few classes are hard-coded as uninformative:
\itemize{
\item \code{simpleError}
\item \code{rlang_error} unless a subclass is detected
\item \code{Rcpp::eval_error}
\item \code{Rcpp::exception}
}
}
\keyword{internal}
